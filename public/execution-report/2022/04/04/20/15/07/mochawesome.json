{
  "stats": {
    "suites": 2,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-04T19:15:08.495Z",
    "end": "2022-04-04T19:15:08.568Z",
    "duration": 73,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7abed794-4f0a-4ba4-ba15-dcb1d65bbe2a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91e1f975-b007-4e4c-9880-d96464ba9baa",
          "title": "Threshold time testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
              "title": " First Class of Feedback",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b53ac262-9d8a-4124-aadd-da9e49fcec0d",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "00e6d787-eeef-4277-939f-8b40945ead2a",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "86ecd551-9fa1-44d2-aec8-ee6d772886a1",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "44bd4f58-a75a-40b5-9c32-23765bf4dcb5",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "76d8cbe4-5746-4134-a194-659b8f93a1af",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "dde1325c-47fe-466b-bc18-2591b9f2111c",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "5f358ddc-1897-4e5d-848c-9d7b4b22b4e3",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "14250b0a-4111-4d5d-abe4-b034ab3ed857",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e0a0c92d-cdd4-4213-b643-b2698a8fd613",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "6d618709-70dd-4888-88cf-5e64c356cdba",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "465aaaa3-9439-4264-b6c9-c7f645abe758",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7caa4315-fa19-4171-a2c5-b80f67d3af44",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "64e4004d-9ee1-435c-a46e-a37a890da58b",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "0ca391d0-a6b8-4efb-9829-19b0cfaeb9bb",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "dd241217-9daf-4128-9791-166afaae129d",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ca6835fd-9516-4c08-b5dc-89b25491f1ef",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e732c170-5a12-4769-b324-6bec51e234d8",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing  First Class of Feedback Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "662cba07-cab9-45c4-921e-0a30d806e89d",
                  "parentUUID": "58ea4a5b-27b3-405d-b325-1e6be3a8b17d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b53ac262-9d8a-4124-aadd-da9e49fcec0d",
                "00e6d787-eeef-4277-939f-8b40945ead2a",
                "86ecd551-9fa1-44d2-aec8-ee6d772886a1",
                "44bd4f58-a75a-40b5-9c32-23765bf4dcb5",
                "76d8cbe4-5746-4134-a194-659b8f93a1af",
                "dde1325c-47fe-466b-bc18-2591b9f2111c",
                "5f358ddc-1897-4e5d-848c-9d7b4b22b4e3",
                "14250b0a-4111-4d5d-abe4-b034ab3ed857",
                "e0a0c92d-cdd4-4213-b643-b2698a8fd613",
                "6d618709-70dd-4888-88cf-5e64c356cdba",
                "465aaaa3-9439-4264-b6c9-c7f645abe758",
                "7caa4315-fa19-4171-a2c5-b80f67d3af44",
                "64e4004d-9ee1-435c-a46e-a37a890da58b",
                "0ca391d0-a6b8-4efb-9829-19b0cfaeb9bb",
                "dd241217-9daf-4128-9791-166afaae129d",
                "ca6835fd-9516-4c08-b5dc-89b25491f1ef",
                "e732c170-5a12-4769-b324-6bec51e234d8",
                "662cba07-cab9-45c4-921e-0a30d806e89d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 63,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 200000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/mnt/e/INESC TEC/feedback-manager/public/execution-report/2022/04/04/20/15/07",
        "reportTitle": "Test Execution Report",
        "reportPageTitle": "Test Report",
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}