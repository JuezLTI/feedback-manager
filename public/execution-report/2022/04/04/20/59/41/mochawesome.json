{
  "stats": {
    "suites": 2,
    "tests": 27,
    "passes": 24,
    "pending": 0,
    "failures": 3,
    "start": "2022-04-04T19:59:42.765Z",
    "end": "2022-04-04T19:59:42.879Z",
    "duration": 114,
    "testsRegistered": 27,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "48d03188-649d-4e7f-9bae-3f241700efe1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "549a53f7-5634-43ca-9fad-87e9193494cc",
          "title": "Threshold time testing -2921.5697223772195- ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
              "title": "-5224.04872818216 - ",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2bcf19f4-2585-4d72-9e71-a90acca7833d",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "57757d4e-f629-4e1d-8db9-9de8acc4c7ea",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {
                    "message": "AssertionError: expected 100.708599999547 to be below 100",
                    "estack": "AssertionError: expected 100.708599999547 to be below 100\n    at _callee2$ (dist-server/tests/sample-tests.js:156:47)\n    at tryCatch (node_modules/regenerator-runtime/runtime.js:63:40)\n    at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:294:22)\n    at Generator.next (node_modules/regenerator-runtime/runtime.js:119:21)\n    at asyncGeneratorStep (dist-server/tests/sample-tests.js:25:103)\n    at _next (dist-server/tests/sample-tests.js:27:194)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                    "diff": "- 100.708599999547\n+ 100\n"
                  },
                  "uuid": "6938dec4-a021-4e28-9906-e7427d8b0ec1",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "41402f41-069a-46d7-a91a-62562700ef1b",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "aa11c4e5-b943-4d94-9137-a1e7285df94c",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2296e363-ffff-4a09-9bba-a8ef6bb89461",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7b7b3c13-c056-4485-b9b0-6823268c8d19",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e3edb956-eed5-4d6c-a86d-71948ca3488f",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f0843acc-6c92-46d5-9b59-31a2d9793fc6",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "60dc8a77-5326-4bd0-8e54-7dbd2a9c15c1",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f545631b-2b81-40a2-9a67-43f88ed88536",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {
                    "message": "AssertionError: expected 100.47489999607205 to be below 100",
                    "estack": "AssertionError: expected 100.47489999607205 to be below 100\n    at _callee2$ (dist-server/tests/sample-tests.js:156:47)\n    at tryCatch (node_modules/regenerator-runtime/runtime.js:63:40)\n    at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:294:22)\n    at Generator.next (node_modules/regenerator-runtime/runtime.js:119:21)\n    at asyncGeneratorStep (dist-server/tests/sample-tests.js:25:103)\n    at _next (dist-server/tests/sample-tests.js:27:194)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                    "diff": "- 100.47489999607205\n+ 100\n"
                  },
                  "uuid": "bdd6d069-b781-4bcd-b702-af3314272ebe",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "eda6d6c3-7b28-427b-9d16-0cf2292d86e1",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f64b2175-044a-44df-a6f7-c935f36c96d2",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b90539de-efd9-4f0f-997a-fc6156c0ad35",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7701ff03-6ea5-4aed-9f9b-6ba23847464e",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "bf1a5d9a-47b3-4095-b494-f240c0253f43",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "727aa8ca-52d6-4c65-8c7c-90c8550180b7",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "34157d14-63b1-427c-981d-8aa1f7e1e045",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "5b10ee11-2f46-4951-b3ed-6ea70d8b70c4",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {
                    "message": "AssertionError: expected 101.11979999393225 to be below 100",
                    "estack": "AssertionError: expected 101.11979999393225 to be below 100\n    at _callee2$ (dist-server/tests/sample-tests.js:156:47)\n    at tryCatch (node_modules/regenerator-runtime/runtime.js:63:40)\n    at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:294:22)\n    at Generator.next (node_modules/regenerator-runtime/runtime.js:119:21)\n    at asyncGeneratorStep (dist-server/tests/sample-tests.js:25:103)\n    at _next (dist-server/tests/sample-tests.js:27:194)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                    "diff": "- 101.11979999393225\n+ 100\n"
                  },
                  "uuid": "f0071287-767b-474c-bddb-3ec76ea3738c",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3df870a2-024a-449b-b8d8-1d6aec1a7559",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "4d983ec7-17b4-4c31-841a-dc3de5662bfb",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "50fe583e-9deb-4733-8e83-c2be3bcfa591",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "189db741-79a9-423d-9111-c006c4affdfa",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "48aa3175-ea29-45e5-9e96-b050ced57c59",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -2921.5697223772195-  -5224.04872818216 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "07c78ccb-b02c-4a99-86a1-8668dc005a37",
                  "parentUUID": "7a4de208-c96f-4b13-84d1-a5378e1821ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2bcf19f4-2585-4d72-9e71-a90acca7833d",
                "57757d4e-f629-4e1d-8db9-9de8acc4c7ea",
                "41402f41-069a-46d7-a91a-62562700ef1b",
                "aa11c4e5-b943-4d94-9137-a1e7285df94c",
                "2296e363-ffff-4a09-9bba-a8ef6bb89461",
                "7b7b3c13-c056-4485-b9b0-6823268c8d19",
                "e3edb956-eed5-4d6c-a86d-71948ca3488f",
                "f0843acc-6c92-46d5-9b59-31a2d9793fc6",
                "60dc8a77-5326-4bd0-8e54-7dbd2a9c15c1",
                "f545631b-2b81-40a2-9a67-43f88ed88536",
                "eda6d6c3-7b28-427b-9d16-0cf2292d86e1",
                "f64b2175-044a-44df-a6f7-c935f36c96d2",
                "b90539de-efd9-4f0f-997a-fc6156c0ad35",
                "7701ff03-6ea5-4aed-9f9b-6ba23847464e",
                "bf1a5d9a-47b3-4095-b494-f240c0253f43",
                "727aa8ca-52d6-4c65-8c7c-90c8550180b7",
                "34157d14-63b1-427c-981d-8aa1f7e1e045",
                "5b10ee11-2f46-4951-b3ed-6ea70d8b70c4",
                "3df870a2-024a-449b-b8d8-1d6aec1a7559",
                "4d983ec7-17b4-4c31-841a-dc3de5662bfb",
                "50fe583e-9deb-4733-8e83-c2be3bcfa591",
                "189db741-79a9-423d-9111-c006c4affdfa",
                "48aa3175-ea29-45e5-9e96-b050ced57c59",
                "07c78ccb-b02c-4a99-86a1-8668dc005a37"
              ],
              "failures": [
                "6938dec4-a021-4e28-9906-e7427d8b0ec1",
                "bdd6d069-b781-4bcd-b702-af3314272ebe",
                "f0071287-767b-474c-bddb-3ec76ea3738c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 99,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 200000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/mnt/e/INESC TEC/feedback-manager/public/execution-report/2022/04/04/20/59/41",
        "reportTitle": "Test Execution Report",
        "reportPageTitle": "Test Report",
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}