{
  "stats": {
    "suites": 2,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-04T19:28:52.422Z",
    "end": "2022-04-04T19:28:52.484Z",
    "duration": 62,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a930ae79-f556-46e1-97b5-6ceceb1415a0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c1f9f910-c48c-4f9a-a7ca-c89fa46db250",
          "title": "Threshold time testing -3707.9745834263144- ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
              "title": "-8982.953087645967 - ",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b9138bf5-3231-4ed3-9fd2-8809e4ff9680",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c79cd4e0-1777-4074-be09-e7c65d29477c",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "50b63e43-b394-4819-a0a4-3fb1720f01de",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "272b9c0b-3ca3-4589-adad-cfda8acc9e87",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "fba9c820-f332-4061-afe8-276d43565f67",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "fbf35bf3-3960-4d83-ae75-9d5893649e85",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "33c6a02a-0faa-4154-a612-cba4e9dd6708",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "fa5f2074-3724-4ead-9c30-af7cbf8e8dc6",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3096b042-86c4-49be-9126-cfa68746ae5e",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "efe5e6bf-55ec-41bb-b300-4a9503e5e743",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "8f76530f-09e4-4038-809a-fb8230e001af",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e80654fc-4ecf-4332-8aaf-0e577879f65a",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c9b6f8ba-b240-435a-bd2e-48430d7a48a4",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "023e07a6-67e6-49cb-a020-69d2ec9497e5",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7d53a4a5-fa47-4170-a438-92662a9ebcf3",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "272fdf6c-06ef-4729-8054-2e22b7ad1369",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "43d87342-0487-44c1-8540-bbe194e533c3",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -3707.9745834263144-  -8982.953087645967 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "074c8e33-82f0-4ccb-ae8c-f6f5b2ee14e1",
                  "parentUUID": "edd5a9a0-e7dd-4d09-86d3-28e18310bc39",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9138bf5-3231-4ed3-9fd2-8809e4ff9680",
                "c79cd4e0-1777-4074-be09-e7c65d29477c",
                "50b63e43-b394-4819-a0a4-3fb1720f01de",
                "272b9c0b-3ca3-4589-adad-cfda8acc9e87",
                "fba9c820-f332-4061-afe8-276d43565f67",
                "fbf35bf3-3960-4d83-ae75-9d5893649e85",
                "33c6a02a-0faa-4154-a612-cba4e9dd6708",
                "fa5f2074-3724-4ead-9c30-af7cbf8e8dc6",
                "3096b042-86c4-49be-9126-cfa68746ae5e",
                "efe5e6bf-55ec-41bb-b300-4a9503e5e743",
                "8f76530f-09e4-4038-809a-fb8230e001af",
                "e80654fc-4ecf-4332-8aaf-0e577879f65a",
                "c9b6f8ba-b240-435a-bd2e-48430d7a48a4",
                "023e07a6-67e6-49cb-a020-69d2ec9497e5",
                "7d53a4a5-fa47-4170-a438-92662a9ebcf3",
                "272fdf6c-06ef-4729-8054-2e22b7ad1369",
                "43d87342-0487-44c1-8540-bbe194e533c3",
                "074c8e33-82f0-4ccb-ae8c-f6f5b2ee14e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 200000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/mnt/e/INESC TEC/feedback-manager/public/execution-report/2022/04/04/20/28/51",
        "reportTitle": "Test Execution Report",
        "reportPageTitle": "Test Report",
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}