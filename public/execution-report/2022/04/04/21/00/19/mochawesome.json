{
  "stats": {
    "suites": 2,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2022-04-04T20:00:19.961Z",
    "end": "2022-04-04T20:00:20.018Z",
    "duration": 57,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bafd3faa-6ac4-429a-b79a-8f4cfb85d5be",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f81c0844-a590-40b6-91ab-198afbe8b90d",
          "title": "Threshold time testing -6777.029818376981- ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
              "title": "-7670.3111460561195 - ",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "0992afe9-c7d5-4fea-b086-e2606e8d8c21",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "08ec89d7-ca85-411d-8201-9c934c065b1c",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "28a2f57a-d4bd-4a85-ac26-bb6406504df0",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "4c996ea5-74e1-4a7d-9164-84e8772beb81",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "9d88e3d9-296a-4c0c-b8e3-1d799c853052",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "0a603858-dd59-4074-a62b-925d02b3c34c",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "8745de44-dde0-4ae6-ab2d-46d913a4a5df",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "a499d55e-a2c2-4ea6-8b95-552f24a00c7a",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "bcd0e19a-a9ed-49cb-9ddb-7dedccd58399",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"alreadyDidItBefore\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f53f779d-4f46-4aea-84dc-96fa83340178",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"frequemcy\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "bfd8781a-4a97-49af-9ba5-f507dc0a6fe0",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"hint\" finish earlier  than 100 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "0129ebf6-4bcd-4883-975e-4498d62fecc6",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"inputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "94562e85-62fa-4b1d-89ca-39114928fabc",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"motivate\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ad5dc8ad-1290-4247-8375-28e979cc55c2",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"motivateHarder\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "5f7cb5ff-7a6e-43d8-bb7e-e3e16b8a6de5",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"outputTestCase\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "389e53d4-f7fa-45eb-bc4d-1b672b4e2d9a",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"percentage\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3507c6d2-abfe-4852-9ccc-96ec97e8a501",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "fullTitle": "Threshold time testing -6777.029818376981-  -7670.3111460561195 -  Validate if feedback \"submissionNumbers\" finish earlier  than 200 ms",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "06f1e956-2b8b-4b0d-99ed-534db31ee77b",
                  "parentUUID": "d65661e0-d54f-4007-b718-f6b6ca1a4c4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0992afe9-c7d5-4fea-b086-e2606e8d8c21",
                "08ec89d7-ca85-411d-8201-9c934c065b1c",
                "28a2f57a-d4bd-4a85-ac26-bb6406504df0",
                "4c996ea5-74e1-4a7d-9164-84e8772beb81",
                "9d88e3d9-296a-4c0c-b8e3-1d799c853052",
                "0a603858-dd59-4074-a62b-925d02b3c34c",
                "8745de44-dde0-4ae6-ab2d-46d913a4a5df",
                "a499d55e-a2c2-4ea6-8b95-552f24a00c7a",
                "bcd0e19a-a9ed-49cb-9ddb-7dedccd58399",
                "f53f779d-4f46-4aea-84dc-96fa83340178",
                "bfd8781a-4a97-49af-9ba5-f507dc0a6fe0",
                "0129ebf6-4bcd-4883-975e-4498d62fecc6",
                "94562e85-62fa-4b1d-89ca-39114928fabc",
                "ad5dc8ad-1290-4247-8375-28e979cc55c2",
                "5f7cb5ff-7a6e-43d8-bb7e-e3e16b8a6de5",
                "389e53d4-f7fa-45eb-bc4d-1b672b4e2d9a",
                "3507c6d2-abfe-4852-9ccc-96ec97e8a501",
                "06f1e956-2b8b-4b0d-99ed-534db31ee77b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 200000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "/mnt/e/INESC TEC/feedback-manager/public/execution-report/2022/04/04/21/00/19",
        "reportTitle": "Test Execution Report",
        "reportPageTitle": "Test Report",
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}